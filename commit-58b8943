commit 58b89433933d36403568a1926dadacb654540682
Author: unknown <seths@sethu-lt3.redmond.corp.microsoft.com>
Date:   Thu Oct 23 18:49:07 2014 -0700

    SQL IaaS Extension - Intial checkin

diff --git a/src/ServiceManagement/Compute/Commands.ServiceManagement/Commands.ServiceManagement.csproj b/src/ServiceManagement/Compute/Commands.ServiceManagement/Commands.ServiceManagement.csproj
index 7245ae9..97336f1 100644
--- a/src/ServiceManagement/Compute/Commands.ServiceManagement/Commands.ServiceManagement.csproj
+++ b/src/ServiceManagement/Compute/Commands.ServiceManagement/Commands.ServiceManagement.csproj
@@ -204,6 +204,17 @@
     <Compile Include="IaaS\Extensions\MicrosoftAntimalware\SetAzureVMMicrosoftAntimalwareExtension.cs" />
     <Compile Include="IaaS\Extensions\MicrosoftAntimalware\VirtualMachineMicrosoftAntimalwareExtensionCmdletBase.cs" />
     <Compile Include="IaaS\Extensions\MicrosoftAntimalware\VirtualMachineMicrosoftAntimalwareExtensionContext.cs" />
+    <Compile Include="IaaS\Extensions\SqlServer\GetAzureVMSqlServerExtension.cs" />
+    <Compile Include="IaaS\Extensions\SqlServer\NewAzureVMSqlServerAutoBackupConfig.cs" />
+    <Compile Include="IaaS\Extensions\SqlServer\NewAzureVMSqlServerAutoPatchingConfig.cs" />
+    <Compile Include="IaaS\Extensions\SqlServer\RemoveAzureVMSqlServerExtension.cs" />
+    <Compile Include="IaaS\Extensions\SqlServer\SetAzureVMSqlServerExtension.cs" />
+    <Compile Include="IaaS\Extensions\SqlServer\SqlServerAutoBackupSettings.cs" />
+    <Compile Include="IaaS\Extensions\SqlServer\SqlServerAutoPatchingSettings.cs" />
+    <Compile Include="IaaS\Extensions\SqlServer\SqlServerPrivateSettings.cs" />
+    <Compile Include="IaaS\Extensions\SqlServer\SqlServerPublicSettings.cs" />
+    <Compile Include="IaaS\Extensions\SqlServer\VirtualMachineSqlServerExtensionCmdletBase.cs" />
+    <Compile Include="IaaS\Extensions\SqlServer\VirtualMachineSqlServerExtensionContext.cs" />
     <Compile Include="IaaS\Network\AddAzureDns.cs" />
     <Compile Include="IaaS\Network\GetAzureInternalLoadBalancer.cs" />
     <Compile Include="IaaS\Network\NewAzureInternalLoadBalancerConfig.cs" />
diff --git a/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/GetAzureVMSqlServerExtension.cs b/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/GetAzureVMSqlServerExtension.cs
new file mode 100644
index 0000000..babed60
--- /dev/null
+++ b/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/GetAzureVMSqlServerExtension.cs
@@ -0,0 +1,69 @@
+﻿// ----------------------------------------------------------------------------------
+//
+// Copyright Microsoft Corporation
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+// http://www.apache.org/licenses/LICENSE-2.0
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+// ----------------------------------------------------------------------------------
+
+using System.Linq;
+using System.Management.Automation;
+using Microsoft.WindowsAzure.Commands.ServiceManagement.Helpers;
+using Newtonsoft.Json;
+
+namespace Microsoft.WindowsAzure.Commands.ServiceManagement.IaaS.Extensions
+{
+    /// <summary>
+    /// Get-AzureVMSqlServerExtension implementation
+    /// </summary>
+    [Cmdlet(
+        VerbsCommon.Get,
+        VirtualMachineSqlServerExtensionNoun,
+        DefaultParameterSetName = GetSqlServerExtensionParamSetName),
+    OutputType(
+        typeof(VirtualMachineSqlServerExtensionContext))]
+    public class GetAzureVMSqlServerExtensionCommand : VirtualMachineSqlServerExtensionCmdletBase
+    {
+        protected const string GetSqlServerExtensionParamSetName = "GetSqlServerExtension";
+
+        internal void ExecuteCommand()
+        {
+            var extensionRefs = GetPredicateExtensionList();
+            WriteObject(
+                extensionRefs == null ? null : extensionRefs.Select(
+                r =>
+                {
+                    GetExtensionValues(r);
+                    var pubSettings = string.IsNullOrEmpty(PublicConfiguration) ? null
+                                    : JsonConvert.DeserializeObject<SqlServerPublicSettings>(PublicConfiguration);
+
+                    return new VirtualMachineSqlServerExtensionContext
+                    {
+                        ExtensionName        = r.Name,
+                        Publisher            = r.Publisher,
+                        ReferenceName        = r.ReferenceName,
+                        Version              = r.Version,
+                        State                = r.State,
+                        PublicConfiguration  = PublicConfiguration,
+                        Region               = pubSettings == null ? null : pubSettings.Region,
+                        PrivateConfiguration = SecureStringHelper.GetSecureString(PrivateConfiguration),
+                        AutoPatchingSettings = pubSettings == null ? null : pubSettings.AutoPatchingSettings,
+                        AutoBackupSettings = pubSettings == null ? null : pubSettings.AutoBackupSettings,
+                        RoleName             = VM.GetInstance().RoleName
+                    };
+                }), true);
+        }
+
+        protected override void ProcessRecord()
+        {
+            base.ProcessRecord();
+            ExecuteCommand();
+        }
+    }
+}
diff --git a/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/NewAzureVMSqlServerAutoBackupConfig.cs b/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/NewAzureVMSqlServerAutoBackupConfig.cs
new file mode 100644
index 0000000..3bbb1b7
--- /dev/null
+++ b/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/NewAzureVMSqlServerAutoBackupConfig.cs
@@ -0,0 +1,67 @@
+﻿using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+using System.Management.Automation;
+
+using System.Security;
+
+namespace Microsoft.WindowsAzure.Commands.ServiceManagement.IaaS.Extensions
+{
+    /// <summary>
+    /// Helper cmdlet to construct instance of AutoBackup settings class
+    /// </summary>
+   [Cmdlet(
+        VerbsCommon.New,
+        AzureVMSqlServerAutoBackupConfigNoun),
+    OutputType(
+        typeof(AutoBackupSettings))]
+    public class NewAzureVMSqlServerAutoBackupConfigCommand : PSCmdlet
+    {
+        protected const string AzureVMSqlServerAutoBackupConfigNoun = "AzureVMSqlServerAutoBackupConfig";
+
+        [Parameter]
+        public bool Enable { get; set; }
+
+        [Parameter]
+        public bool EnableEncryption { get; set; }
+
+        [Parameter]
+        public int RetentionPeriod { get; set; }
+
+        [Parameter]
+        public string StorageUrl { get; set; }
+
+        [Parameter]
+        public string StorageAccessKey { get; set; }
+
+        [Parameter]
+        public string Password { get; set; }
+
+        /// <summary>
+        /// Initialzies a new instance of the <see cref="NewAzureVMSqlServerAutoBackupConfigCommand"/> class.
+        /// </summary>
+        public NewAzureVMSqlServerAutoBackupConfigCommand()
+        {
+        }
+
+        /// <summary>
+        /// Creates and returns <see cref="AutoBackupSettings"/> object.
+        /// </summary>
+        protected override void ProcessRecord()
+        {
+            AutoBackupSettings autoBackupSettings = new AutoBackupSettings();
+
+            autoBackupSettings.Enable = Enable;
+            autoBackupSettings.EnableEncryption = EnableEncryption;
+            autoBackupSettings.RetentionPeriod = RetentionPeriod;
+            autoBackupSettings.StorageUrl = StorageUrl;
+            autoBackupSettings.StorageAccessKey = StorageAccessKey;
+            autoBackupSettings.Password = Password;
+
+            WriteObject(autoBackupSettings);
+        }
+        
+    }
+}
diff --git a/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/NewAzureVMSqlServerAutoPatchingConfig.cs b/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/NewAzureVMSqlServerAutoPatchingConfig.cs
new file mode 100644
index 0000000..a725972
--- /dev/null
+++ b/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/NewAzureVMSqlServerAutoPatchingConfig.cs
@@ -0,0 +1,61 @@
+﻿using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+using System.Management.Automation;
+
+namespace Microsoft.WindowsAzure.Commands.ServiceManagement.IaaS.Extensions
+{
+    /// <summary>
+    /// Helper cmdlet to construct instance of AutoPatching settings class
+    /// </summary>
+   [Cmdlet(
+        VerbsCommon.New,
+        AzureVMSqlServerAutoPatchingConfigNoun),
+    OutputType(
+        typeof(AutoPatchingSettings))]
+    public class NewAzureVMSqlServerAutoPatchingConfigCommand : PSCmdlet
+    {
+        protected const string AzureVMSqlServerAutoPatchingConfigNoun = "AzureVMSqlServerAutoPatchingConfig";
+
+        [Parameter]
+        public bool Enable { get; set; }
+
+        [Parameter]
+        public string DayOfWeek { get; set; }
+
+        [Parameter]
+        public int MaintenanceWindowStartingHour { get; set; }
+
+        [Parameter]
+        public int MaintenanceWindowDuration { get; set; }
+
+        [Parameter]
+        public string PatchCategory { get; set; }
+
+
+        /// <summary>
+        /// Initialzies a new instance of the <see cref="NewSqlServerAutoPatchingConfigCommand"/> class.
+        /// </summary>
+        public NewAzureVMSqlServerAutoPatchingConfigCommand()
+        {
+        }
+
+        /// <summary>
+        /// Creates and returns <see cref="AutoPatchingSettings"/> object.
+        /// </summary>
+        protected override void ProcessRecord()
+        {
+            AutoPatchingSettings autoPatchingSettings = new AutoPatchingSettings();
+
+            autoPatchingSettings.Enable = Enable;
+            autoPatchingSettings.DayOfWeek = DayOfWeek;
+            autoPatchingSettings.MaintenanceWindowStartingHour = MaintenanceWindowStartingHour;
+            autoPatchingSettings.MaintenanceWindowDuration = MaintenanceWindowDuration;
+            autoPatchingSettings.PatchCategory = PatchCategory;
+
+            WriteObject(autoPatchingSettings);
+        }
+    }
+}
diff --git a/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/RemoveAzureVMSqlServerExtension.cs b/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/RemoveAzureVMSqlServerExtension.cs
new file mode 100644
index 0000000..b1464c1
--- /dev/null
+++ b/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/RemoveAzureVMSqlServerExtension.cs
@@ -0,0 +1,47 @@
+﻿// ----------------------------------------------------------------------------------
+//
+// Copyright Microsoft Corporation
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+// http://www.apache.org/licenses/LICENSE-2.0
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+// ----------------------------------------------------------------------------------
+
+using System.Management.Automation;
+using Microsoft.WindowsAzure.Commands.ServiceManagement.Model;
+
+namespace Microsoft.WindowsAzure.Commands.ServiceManagement.IaaS.Extensions
+{
+    /// <summary>
+    /// Remove-AzureVMSqlServerExtension cmdlet implementation
+    /// this cmdlet removes SQL Server extension info VM object
+    /// Explicit call to Update-AzureVM is required to commit changes to Azure
+    /// </summary>
+    [Cmdlet(
+        VerbsCommon.Remove,
+        VirtualMachineSqlServerExtensionNoun,
+        DefaultParameterSetName = RemoveSqlServerExtensionParamSetName),
+    OutputType(
+        typeof(IPersistentVM))]
+    public class RemoveAzureVMSqlServerExtensionCommand : VirtualMachineSqlServerExtensionCmdletBase
+    {
+        protected const string RemoveSqlServerExtensionParamSetName = "RemoveSqlServerExtension";
+
+        internal void ExecuteCommand()
+        {
+            RemovePredicateExtensions();
+            WriteObject(VM);
+        }
+
+        protected override void ProcessRecord()
+        {
+            base.ProcessRecord();
+            ExecuteCommand();
+        }
+    }
+}
diff --git a/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/SetAzureVMSqlServerExtension.cs b/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/SetAzureVMSqlServerExtension.cs
new file mode 100644
index 0000000..5769762
--- /dev/null
+++ b/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/SetAzureVMSqlServerExtension.cs
@@ -0,0 +1,103 @@
+﻿// ----------------------------------------------------------------------------------
+//
+// Copyright Microsoft Corporation
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+// http://www.apache.org/licenses/LICENSE-2.0
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+// ----------------------------------------------------------------------------------
+
+using System;
+using System.Linq;
+using System.Management.Automation;
+using Microsoft.WindowsAzure.Commands.Common;
+using Microsoft.WindowsAzure.Commands.Common.Models;
+using Microsoft.WindowsAzure.Commands.ServiceManagement.Model;
+using Microsoft.WindowsAzure.Commands.ServiceManagement.Properties;
+
+namespace Microsoft.WindowsAzure.Commands.ServiceManagement.IaaS.Extensions
+{
+    /// <summary>
+    /// Set-AzureVMSqlServerExtension implementation.
+    /// This cmdlet can be used to set AutoPatching / AutoBackup settings,  disable, uninstalls Sql Extension
+    /// </summary>
+    [Cmdlet(
+        VerbsCommon.Set,
+        VirtualMachineSqlServerExtensionNoun,
+        DefaultParameterSetName = EnableExtensionParamSetName),
+    OutputType(
+        typeof(IPersistentVM))]
+    public class SetAzureVMSqlServerExtensionCommand : VirtualMachineSqlServerExtensionCmdletBase
+    {
+        protected const string EnableExtensionParamSetName = "EnableSqlServerExtension";
+        protected const string DisableSqlServerExtensionParamSetName = "DisableSqlServerExtension";
+        protected const string UninstallSqlServerExtensionParamSetName = "UninstallSqlServerExtension";
+
+        [Parameter(
+            Mandatory = false,
+            Position = 0,
+            ValueFromPipelineByPropertyName = true,
+            HelpMessage = "The Extension Reference Name.")]
+        [ValidateNotNullOrEmpty]
+        public override string ReferenceName { get; set; }
+
+        [Parameter(
+            Mandatory = false,
+            Position = 1,
+            ValueFromPipelineByPropertyName = true,
+            HelpMessage = "The Extension Version.")]
+        [ValidateNotNullOrEmpty]
+        public override string Version { get; set; }
+
+        [Parameter(
+            ParameterSetName = DisableSqlServerExtensionParamSetName,
+            Mandatory = false,
+            Position = 2,
+            ValueFromPipelineByPropertyName = true,
+            HelpMessage = "Disable VM Sql Server Extension")]
+        public override SwitchParameter Disable { get; set; }
+
+        [Parameter(
+            ParameterSetName = UninstallSqlServerExtensionParamSetName,
+            Mandatory = false,
+            Position = 2,
+            ValueFromPipelineByPropertyName = true,
+            HelpMessage = "Uninstall Sql Server Script Extension")]
+        public override SwitchParameter Uninstall { get; set; }
+
+        [Parameter]
+        public override AutoPatchingSettings AutoPatchingSettings { get; set; }
+
+        [Parameter]
+        public override AutoBackupSettings AutoBackupSettings { get; set; }
+
+        protected override void ProcessRecord()
+        {
+            base.ProcessRecord();
+            ExecuteCommand();
+        }
+
+        internal void ExecuteCommand()
+        {
+            ValidateParameters();
+            RemovePredicateExtensions();
+            AddResourceExtension();
+            WriteObject(VM);
+        }
+
+        protected override void ValidateParameters()
+        {
+            base.ValidateParameters();
+            this.ReferenceName = string.IsNullOrEmpty(this.ReferenceName) ? ExtensionDefaultName : this.ReferenceName;
+
+            this.PublicConfiguration = GetPublicConfiguration();
+            this.PrivateConfiguration = GetPrivateConfiguration();
+            this.Version = this.Version ?? ExtensionDefaultVersion;
+        }
+    }
+}
diff --git a/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/SqlServerAutoBackupSettings.cs b/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/SqlServerAutoBackupSettings.cs
new file mode 100644
index 0000000..651e284
--- /dev/null
+++ b/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/SqlServerAutoBackupSettings.cs
@@ -0,0 +1,54 @@
+﻿// ----------------------------------------------------------------------------------
+//
+// Copyright Microsoft Corporation
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+// http://www.apache.org/licenses/LICENSE-2.0
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+// ----------------------------------------------------------------------------------
+
+using System.Security;
+
+namespace Microsoft.WindowsAzure.Commands.ServiceManagement.IaaS.Extensions
+{
+    /// <summary>
+    /// Autobackup settings to configure managed backup on SQL VM
+    /// </summary>
+    public class AutoBackupSettings
+    {
+        /// <summary>
+        /// Defines if the Auto-backup feature is enabled or disabled
+        /// </summary>
+        public bool Enable { get; set; }
+
+        /// <summary>
+        /// Defines if backups will be encrypted or not
+        /// </summary>
+        public bool EnableEncryption { get; set; }
+
+        /// <summary>
+        /// Defines the number of days to keep the backups
+        /// </summary>
+        public int RetentionPeriod { get; set; }
+
+        /// <summary>
+        /// Name of storage account where backup will be stored
+        /// </summary>
+        public string StorageUrl { get; set; }
+
+        /// <summary>
+        /// Key of storage account where backup will be stored
+        /// </summary>
+        public string StorageAccessKey { get; set; }
+
+        /// <summary>
+        /// Password required for certification when encryption is enabled
+        /// </summary>
+        public string Password { get; set; }
+    }
+}
diff --git a/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/SqlServerAutoPatchingSettings.cs b/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/SqlServerAutoPatchingSettings.cs
new file mode 100644
index 0000000..bd9f635
--- /dev/null
+++ b/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/SqlServerAutoPatchingSettings.cs
@@ -0,0 +1,29 @@
+﻿// ----------------------------------------------------------------------------------
+//
+// Copyright Microsoft Corporation
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+// http://www.apache.org/licenses/LICENSE-2.0
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+// ----------------------------------------------------------------------------------
+
+
+namespace Microsoft.WindowsAzure.Commands.ServiceManagement.IaaS.Extensions
+{
+    /// <summary>
+    /// AutoPatching settings to configure auto-patching on SQL VM
+    /// </summary>
+    public class AutoPatchingSettings
+    {
+        public bool Enable { get; set; }
+        public string DayOfWeek { get; set; }
+        public int MaintenanceWindowStartingHour { get; set; }
+        public int MaintenanceWindowDuration { get; set; }
+        public string PatchCategory { get; set; }
+    }
+}
diff --git a/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/SqlServerPrivateSettings.cs b/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/SqlServerPrivateSettings.cs
new file mode 100644
index 0000000..fff9381
--- /dev/null
+++ b/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/SqlServerPrivateSettings.cs
@@ -0,0 +1,27 @@
+﻿// ----------------------------------------------------------------------------------
+//
+// Copyright Microsoft Corporation
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+// http://www.apache.org/licenses/LICENSE-2.0
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+// ----------------------------------------------------------------------------------
+using System.Security;
+
+namespace Microsoft.WindowsAzure.Commands.ServiceManagement.IaaS.Extensions
+{
+    /// <summary>
+    /// SQL Server extension's private settings
+    /// </summary>
+    public class SqlServerPrivateSettings
+    {
+        public string StorageUrl;
+        public string StorageAccessKey;
+        public string Password;
+    }
+}
diff --git a/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/SqlServerPublicSettings.cs b/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/SqlServerPublicSettings.cs
new file mode 100644
index 0000000..2e8ebd1
--- /dev/null
+++ b/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/SqlServerPublicSettings.cs
@@ -0,0 +1,38 @@
+﻿// ----------------------------------------------------------------------------------
+//
+// Copyright Microsoft Corporation
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+// http://www.apache.org/licenses/LICENSE-2.0
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+// ----------------------------------------------------------------------------------
+
+
+namespace Microsoft.WindowsAzure.Commands.ServiceManagement.IaaS.Extensions
+{
+    /// <summary>
+    /// SQL Server Extension's public settings
+    /// </summary>
+    public class SqlServerPublicSettings
+    {
+        /// <summary>
+        /// Azure region where this VM is currently running
+        /// </summary>
+        public string Region { get; set; }
+
+        /// <summary>
+        /// auto patching settings
+        /// </summary>
+        public AutoPatchingSettings AutoPatchingSettings { get; set; }
+
+        /// <summary>
+        /// auto-backup settings
+        /// </summary>
+        public AutoBackupSettings AutoBackupSettings { get; set; }
+    }
+}
diff --git a/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/VirtualMachineSqlServerExtensionCmdletBase.cs b/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/VirtualMachineSqlServerExtensionCmdletBase.cs
new file mode 100644
index 0000000..ad524ca
--- /dev/null
+++ b/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/VirtualMachineSqlServerExtensionCmdletBase.cs
@@ -0,0 +1,91 @@
+﻿// ----------------------------------------------------------------------------------
+//
+// Copyright Microsoft Corporation
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+// http://www.apache.org/licenses/LICENSE-2.0
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+// ----------------------------------------------------------------------------------
+
+using Microsoft.WindowsAzure.Commands.Utilities.Common;
+using Newtonsoft.Json;
+
+namespace Microsoft.WindowsAzure.Commands.ServiceManagement.IaaS.Extensions
+{
+    /// <summary>
+    /// Base class for SQL extension specific cmdlets
+    /// </summary>
+    public class VirtualMachineSqlServerExtensionCmdletBase : VirtualMachineExtensionCmdletBase
+    {
+        protected const string VirtualMachineSqlServerExtensionNoun = "AzureVMSqlServerExtension";
+
+        /// <summary>
+        /// Extension's publisher name - $TODO- update name after publishing sqlvm extension as public
+        /// </summary>
+        protected const string ExtensionDefaultPublisher = "Microsoft.SqlServer.Managability.IaaS.Test";
+
+        /// <summary>
+        /// Extension's name - $TODO- update name after publishing sqlvm extension as public
+        /// </summary>
+        protected const string ExtensionDefaultName = "SqlIaaSAgentExtension";
+
+        /// <summary>
+        /// Extension's default version - $TODO- update name after publishing sqlvm extension as public
+        /// </summary>
+        protected const string ExtensionDefaultVersion = "1.21";
+
+        /// <summary>
+        /// value of Auto-patching settings object that can be set by derived classes
+        /// </summary>
+        public virtual AutoPatchingSettings AutoPatchingSettings { get; set; }
+
+        /// <summary>
+        /// value of Auto-backup settings object that can be set by derived classes
+        /// </summary>
+        public virtual AutoBackupSettings AutoBackupSettings { get; set; }
+
+        /// <summary>
+        /// Sets extension's publisher and name
+        /// </summary>
+        public VirtualMachineSqlServerExtensionCmdletBase()
+        {
+            base.publisherName = ExtensionDefaultPublisher;
+            base.extensionName = ExtensionDefaultName;
+        }
+
+        /// <summary>
+        /// Returns the public configuration as string
+        /// </summary>
+        /// <returns></returns>
+        protected string GetPublicConfiguration()
+        {
+            return JsonUtilities.TryFormatJson(JsonConvert.SerializeObject(
+               new SqlServerPublicSettings
+               {
+                   AutoPatchingSettings = this.AutoPatchingSettings,
+                   AutoBackupSettings = this.AutoBackupSettings
+               }));
+        }
+
+        /// <summary>
+        /// Returns private configuration as string
+        /// </summary>
+        /// <returns></returns>
+        protected string GetPrivateConfiguration()
+        {
+            return JsonUtilities.TryFormatJson(JsonConvert.SerializeObject(
+                       new SqlServerPrivateSettings
+                       {
+                           StorageUrl = (this.AutoBackupSettings == null)? string.Empty: this.AutoBackupSettings.StorageUrl,
+                           StorageAccessKey = (this.AutoBackupSettings == null) ? string.Empty : this.AutoBackupSettings.StorageAccessKey,
+                           Password = (this.AutoBackupSettings == null) ? string.Empty : this.AutoBackupSettings.Password
+                       }));
+
+        }
+    }
+}
diff --git a/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/VirtualMachineSqlServerExtensionContext.cs b/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/VirtualMachineSqlServerExtensionContext.cs
new file mode 100644
index 0000000..80f9df7
--- /dev/null
+++ b/src/ServiceManagement/Compute/Commands.ServiceManagement/IaaS/Extensions/SqlServer/VirtualMachineSqlServerExtensionContext.cs
@@ -0,0 +1,37 @@
+﻿// ----------------------------------------------------------------------------------
+//
+// Copyright Microsoft Corporation
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+// http://www.apache.org/licenses/LICENSE-2.0
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+// ----------------------------------------------------------------------------------
+
+namespace Microsoft.WindowsAzure.Commands.ServiceManagement.IaaS.Extensions
+{
+    /// <summary>
+    /// SQL Extension's context object used by Get-AzureVMSqlServerExtension
+    /// </summary>
+    public class VirtualMachineSqlServerExtensionContext : VirtualMachineExtensionContext
+    {
+        /// <summary>
+        /// Azure region where this VM is currently running
+        /// </summary>
+        public string Region { get; set; }
+
+        /// <summary>
+        /// auto-patching settings
+        /// </summary>
+        public AutoPatchingSettings AutoPatchingSettings;
+
+        /// <summary>
+        /// auto-backup settings
+        /// </summary>
+        public AutoBackupSettings AutoBackupSettings;
+    }
+}
